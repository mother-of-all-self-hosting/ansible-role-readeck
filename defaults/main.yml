# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 noah
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://codeberg.org/readeck/readeck

readeck_enabled: true

readeck_identifier: readeck
readeck_base_path: "/{{ readeck_identifier }}"
readeck_data_path: "{{ readeck_base_path }}/data"

# renovate: datasource=docker depName=codeberg.org/readeck/readeck versioning=semver
readeck_version: 0.20.2

readeck_uid: ''
readeck_gid: ''

# The hostname at which Readeck is served.
readeck_hostname: ''

readeck_scheme: https

# The path at which Readeck is served.
# This value must either be `/` or not end with a slash (e.g. `/readeck`).
readeck_path_prefix: /

readeck_container_image: "{{ readeck_container_image_registry_prefix }}readeck/readeck:{{ readeck_container_image_tag }}"
readeck_container_image_tag: "{{ readeck_version }}"
readeck_container_image_registry_prefix: "{{ readeck_container_image_registry_prefix_upstream }}"
readeck_container_image_registry_prefix_upstream: "{{ readeck_container_image_registry_prefix_upstream_default }}"
readeck_container_image_registry_prefix_upstream_default: codeberg.org/
readeck_container_image_force_pull: "{{ readeck_container_image.endswith(':latest') }}"

# Controls whether the container exposes its HTTP port (tcp/8000 in the container).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:2586"), or empty string to not expose.
readeck_container_http_host_bind_port: ""

# The base container network. It will be auto-created by this role if it doesn't exist already.
readeck_container_network: "{{ readeck_identifier }}"

# The port number in the container
readeck_container_http_port: 8000

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
readeck_container_additional_networks: "{{ readeck_container_additional_networks_auto + readeck_container_additional_networks_custom }}"
readeck_container_additional_networks_auto: []
readeck_container_additional_networks_custom: []

# readeck_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `readeck_container_labels_additional_labels`.
readeck_container_labels_traefik_enabled: true
readeck_container_labels_traefik_docker_network: "{{ readeck_container_network }}"
readeck_container_labels_traefik_hostname: "{{ readeck_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/readeck`).
readeck_container_labels_traefik_path_prefix: "{{ readeck_path_prefix }}"
readeck_container_labels_traefik_rule: "Host(`{{ readeck_container_labels_traefik_hostname }}`){% if readeck_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ readeck_container_labels_traefik_path_prefix }}`){% endif %}"
readeck_container_labels_traefik_priority: 0
readeck_container_labels_traefik_entrypoints: web-secure
readeck_container_labels_traefik_tls: "{{ readeck_container_labels_traefik_entrypoints != 'web' }}"
readeck_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls whether a compression middleware will be injected into the middlewares list.
# This compression middleware is supposed to be defined elsewhere (using labels or a File provider, etc.) and is merely referenced by this router.
readeck_container_labels_traefik_compression_middleware_enabled: false
readeck_container_labels_traefik_compression_middleware_name: ""

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `readeck_container_labels_traefik_additional_request_headers_custom`
readeck_container_labels_traefik_additional_request_headers: "{{ readeck_container_labels_traefik_additional_request_headers_auto | combine(readeck_container_labels_traefik_additional_request_headers_custom) }}"
readeck_container_labels_traefik_additional_request_headers_auto: {}
readeck_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `readeck_container_labels_traefik_additional_response_headers_custom`
readeck_container_labels_traefik_additional_response_headers: "{{ readeck_container_labels_traefik_additional_response_headers_auto | combine(readeck_container_labels_traefik_additional_response_headers_custom) }}"
readeck_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': readeck_http_header_xss_protection} if readeck_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': readeck_http_header_content_type_options} if readeck_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': readeck_http_header_content_security_policy} if readeck_http_header_content_security_policy else {})
    | combine ({'Permissions-Policy': readeck_http_header_permissions_policy} if readeck_http_header_permissions_policy else {})
    | combine ({'Strict-Transport-Security': readeck_http_header_strict_transport_security} if readeck_http_header_strict_transport_security and readeck_container_labels_traefik_tls else {})
  }}
readeck_container_labels_traefik_additional_response_headers_custom: {'X-Clacks-Overhead': GNU Terry Pratchett}

# readeck_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# readeck_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
readeck_container_labels_additional_labels: ''

# A list of extra arguments to pass to the container
readeck_container_extra_arguments: []

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
readeck_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
readeck_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
readeck_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permissions-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy
readeck_http_header_permissions_policy: "{{ 'interest-cohort=()' if readeck_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
readeck_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if readeck_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `readeck_http_header_permissions_policy`
readeck_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `readeck_http_header_strict_transport_security`
readeck_hsts_preload_enabled: false

# List of systemd services that Readeck systemd service depends on
readeck_systemd_required_services_list: "{{ readeck_systemd_required_services_list_default + readeck_systemd_required_services_list_auto + readeck_systemd_required_services_list_custom }}"
readeck_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
readeck_systemd_required_services_list_auto: []
readeck_systemd_required_services_list_custom: []

# List of systemd services that the Readeck systemd service wants
readeck_systemd_wanted_services_list: "{{ readeck_systemd_wanted_services_list_default + readeck_systemd_wanted_services_list_auto + readeck_systemd_wanted_services_list_custom }}"
readeck_systemd_wanted_services_list_default: []
readeck_systemd_wanted_services_list_auto: []
readeck_systemd_wanted_services_list_custom: []

# Additional environment variables.
readeck_environment_variables_additional_variables: ''
